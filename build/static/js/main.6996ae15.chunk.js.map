{"version":3,"sources":["components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","onCloseForm","onChange","event","target","name","value","setState","onSubmit","preventDefault","state","onClear","status","id","this","task","nextProps","className","onClick","type","required","Component","Search","onSearch","keyword","placeholder","Sort","sortBy","sortValue","onSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","Control","TaskItem","onUpdateStatus","onDelete","onUpdate","index","TaskList","onFilter","filterName","filterStatus","tasks","elmTasks","map","key","App","onToggleForm","isDisplayForm","taskEditing","onShowForm","data","generateId","push","findIndex","localStorage","setItem","JSON","stringify","_","result","forEach","splice","parseInt","filter","toLowerCase","console","log","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","sort","a","b","elmTaskForm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6996ae15.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TaskForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            status: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n      if(this.props.task){\r\n        this.setState({\r\n          id: this.props.task.id,\r\n          name: this.props.task.name,\r\n          status: this.props.task.status,\r\n        });\r\n      }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n      if(nextProps && nextProps.task){\r\n        this.setState({\r\n          id: nextProps.task.id,\r\n          name: nextProps.task.name,\r\n          status: nextProps.task.status,\r\n        });\r\n      }else if(!nextProps.task){\r\n        this.setState({\r\n             id: '',\r\n            name: '',\r\n            status: false\r\n        });\r\n      }  \r\n       \r\n    }\r\n    \r\n    \r\n    \r\n\r\n    onCloseForm = () =>{\r\n        this.props.onCloseForm();\r\n    }\r\n    onChange = (event) =>{\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        if(name === 'status'){\r\n            value = target.value === 'true' ? true : false\r\n        }\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    onSubmit = (event) =>{\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        //Cancel and Close form\r\n        this.onClear();\r\n        this.onCloseForm();\r\n        \r\n    }\r\n    onClear = () =>{\r\n      this.setState({\r\n        name: '',\r\n        status: false\r\n      })\r\n    }\r\n  render() {\r\n    var {id} = this.state;\r\n    return (\r\n        <div className=\"panel panel-warning\">\r\n        <div className=\"panel-heading\">\r\n          <h3 className=\"panel-title\">\r\n          {id !== '' ? 'Cập nhật công việc' : 'Thêm công việc'}\r\n          <span className = \"fa fa-times-circle text-right\"\r\n                onClick = {this.onCloseForm}      \r\n              >\r\n          </span>\r\n          </h3>\r\n        </div>\r\n        <div className=\"panel-body\">\r\n          <form onSubmit = {this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Tên :</label>\r\n              <input \r\n              type=\"text\" \r\n              className=\"form-control\" \r\n                name = \"name\"\r\n                value = {this.state.name}\r\n                onChange = {this.onChange}\r\n              />\r\n            </div>\r\n            <label>Trạng Thái :</label>\r\n            <select \r\n            className=\"form-control\" \r\n            required=\"required\" \r\n            name = \"status\"\r\n            value = {this.state.status}\r\n            onChange = {this.onChange}\r\n            >\r\n              <option value={true}>Kích Hoạt</option>\r\n              <option value={false}>Ẩn</option>\r\n            </select>\r\n            <br />\r\n            <div className=\"text-center\">\r\n              <button type=\"submit\" className=\"btn btn-warning\">Thêm</button>&nbsp;\r\n              <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onClear}>Hủy Bỏ</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default TaskForm;\r\n","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      keyword: ''\r\n    }\r\n  }\r\n  onChange = (event) =>{\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onSearch = () =>{\r\n    this.props.onSearch(this.state.keyword);\r\n  }\r\n  \r\n  render() {\r\n    var {keyword} = this.state\r\n    return (\r\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n        <div className=\"input-group\">\r\n          <input \r\n          type=\"text\" \r\n          className=\"form-control\" \r\n          placeholder=\"Nhập từ khóa...\" \r\n          name = \"keyword\" \r\n          value = {keyword}\r\n          onChange = {this.onChange}\r\n          />\r\n          <span className=\"input-group-btn\">\r\n            <button \r\n            className=\"btn btn-primary\" \r\n            type=\"button\"\r\n            onClick = {this.onSearch}\r\n            >\r\n              <span className=\"fa fa-search mr-5\" />Tìm\r\n            </button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\n\r\nclass Sort extends Component {\r\n  \r\n  onClick = (sortBy, sortValue) =>{\r\n    this.props.onSort(sortBy,sortValue);\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n        <div className=\"dropdown\">\r\n          <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n            Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\" />\r\n          </button>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n            <li onClick = {() =>this.onClick('name',1)}>\r\n              <a \r\n              role=\"button\" \r\n              className = {(this.props.sortBy === 'name' && this.props.sortValue === 1) ? 'sort_selected' : ''}\r\n              >\r\n                <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                  Tên A-Z\r\n                </span>\r\n              </a>\r\n            </li>\r\n            <li onClick = {() =>this.onClick('name',-1)}>\r\n              <a role=\"button\"\r\n                className = {(this.props.sortBy === 'name' && this.props.sortValue === -1) ? 'sort_selected' : ''}\r\n              >\r\n                <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                  Tên Z-A\r\n        </span>\r\n              </a>\r\n            </li>\r\n            <li role=\"separator\" className=\"divider\" />\r\n            <li onClick = {() =>this.onClick('status',1)}>\r\n              <a \r\n              role=\"button\"\r\n              className = {(this.props.sortBy === 'status' && this.props.sortValue === 1) ? 'sort_selected' : ''}\r\n              >Trạng Thái Kích Hoạt</a>\r\n            </li>\r\n            <li onClick = {() =>this.onClick('status',-1)}>\r\n              <a \r\n              role=\"button\"\r\n              className = {(this.props.sortBy === 'status' && this.props.sortValue === -1) ? 'sort_selected' : ''}\r\n              >Trạng Thái Ẩn</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Sort;\r\n","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\nclass Control extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row mt-15\">\r\n        <Search onSearch = {this.props.onSearch}></Search>       \r\n        <Sort \r\n        onSort = {this.props.onSort}\r\n        sortBy = {this.props.sortBy}\r\n        sortValue = {this.props.sortValue}\r\n        ></Sort>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Control;\r\n","import React, { Component } from 'react';\r\n\r\nclass TaskItem extends Component {\r\n  onUpdateStatus = () =>{\r\n      this.props.onUpdateStatus(this.props.task.id);  \r\n  }\r\n  onDelete = () =>{\r\n    this.props.onDelete(this.props.task.id);\r\n  }\r\n  onUpdate = () =>{\r\n    this.props.onUpdate(this.props.task.id);\r\n  }\r\n  render() {\r\n      var {task,index} = this.props;\r\n    return (\r\n        <tr>\r\n            <td>{index + 1}</td>\r\n            <td>{task.name}</td>\r\n            <td className=\"text-center\">\r\n              <span className={task.status === true ?'label label-danger' : 'label label-success'}\r\n                  onClick = {this.onUpdateStatus}\r\n              >\r\n                {task.status === true ? 'Kích hoạt' : 'Ẩn'}\r\n                \r\n              </span>\r\n            </td>\r\n            <td className=\"text-center\">\r\n              <button type=\"button\" className=\"btn btn-warning\" onClick = {this.onUpdate}>\r\n                <span className=\"fa fa-pencil mr-5\" />Sửa\r\n        </button>\r\n        &nbsp;\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onDelete}>\r\n                <span className=\"fa fa-trash mr-5\" />Xóa\r\n        </button>\r\n            </td>\r\n          </tr>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default TaskItem;\r\n","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nclass TaskList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterName: '',\r\n      filterStatus: -1 // all -1, active: 1, deactive: 0\r\n    }\r\n  }\r\n\r\n  onChange = (event) =>{\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.props.onFilter(\r\n      name === 'filterName' ? value : this.state.filterName,\r\n      name === 'filterStatus' ? value : this.state.filterStatus)\r\n\r\n    this.setState({\r\n      [name] : value\r\n    });\r\n  }\r\n  \r\n  render() {\r\n      var {tasks} = this.props; // var tasks = this.props.tasks\r\n      var {filterName,filterStatus} = this.state;\r\n      var elmTasks = tasks.map((task,index) => {\r\n          return <TaskItem \r\n          key = {task.id} \r\n          index = {index} \r\n          task = {task}\r\n          onUpdateStatus = {this.props.onUpdateStatus} \r\n          onDelete = {this.props.onDelete} \r\n          onUpdate = {this.props.onUpdate} \r\n\r\n          />\r\n      })\r\n    return (\r\n        <table className=\"table table-bordered table-hover mt-15\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-center\">STT</th>\r\n            <th className=\"text-center\">Tên</th>\r\n            <th className=\"text-center\">Trạng Thái</th>\r\n            <th className=\"text-center\">Hành Động</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td />\r\n            <td>\r\n              <input type=\"text\" className=\"form-control\" name = \"filterName\" value = {filterName} onChange = {this.onChange}  />\r\n            </td>\r\n            <td>\r\n              <select className=\"form-control\" name = \"filterStatus\" value = {filterStatus} onChange = {this.onChange}>\r\n                <option value={-1}>Tất Cả</option>\r\n                <option value={0}>Ẩn</option>\r\n                <option value={1}>Kích Hoạt</option>\r\n              </select>\r\n            </td>\r\n            <td />\r\n          </tr>\r\n          {elmTasks}\r\n        </tbody>\r\n      </table>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default TaskList;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport _ from 'lodash';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        tasks: [], // id:unique, name, status\n        isDisplayForm: false,\n        taskEditing: null,\n        filter:{\n          name: '',\n          status: -1\n        },\n        keyword : '',\n        sortBy:'name',\n        sortValue: 1\n    }\n  }\n\n  componentWillMount() {\n    if(localStorage && localStorage.getItem('tasks')){\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      })\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n  generateId(){\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4();\n  }\n  onToggleForm = () =>{\n    if(this.state.isDisplayForm && this.state.taskEditing !== null){\n      this.setState({\n        isDisplayForm : true,\n        taskEditing: null\n      });\n    }else{\n      this.setState({\n        isDisplayForm : !this.state.isDisplayForm,\n        taskEditing: null\n      })\n    }\n    \n  }\n  onCloseForm = () =>{\n      this.setState({\n        isDisplayForm: false,\n        \n      })    \n  }\n\n  onShowForm = () =>{\n    this.setState({\n      isDisplayForm: true\n    }) \n  }\n\n  onSubmit = (data) =>{\n    var {tasks} = this.state;\n    if(data.id ===''){\n      data.id = this.generateId(); // task\n      tasks.push(data);\n    }else{\n      //edit\n      var index = this.findIndex(data.id);\n      tasks[index] = data;\n    }\n\n    this.setState({\n      tasks: tasks,\n      taskEditing: null\n    });\n    localStorage.setItem('tasks',JSON.stringify(tasks));\n\n  }\n  onUpdateStatus = (id) =>{\n    var {tasks} = this.state;\n    // var index = this.findIndex(id);\n    var index = _.findIndex(tasks,(task) =>{\n      return task.id === id;\n    });\n    if(index !== -1){\n      tasks[index].status = ! tasks[index].status;\n      this.setState({\n          tasks: tasks\n      });\n      localStorage.setItem('tasks',JSON.stringify(tasks));\n    }\n  }\n  findIndex = (id) =>{\n    var {tasks} = this.state;\n    var result = -1;\n    tasks.forEach((task,index) =>{\n      if(task.id === id){\n          result = index;\n      }\n    });\n    return result;\n  }\n  onDelete = (id) =>{\n    var {tasks} = this.state;\n    var index = this.findIndex(id);\n    if(index !== -1){\n      tasks.splice(index,1);\n      this.setState({\n          tasks: tasks\n      });\n      localStorage.setItem('tasks',JSON.stringify(tasks));\n    }\n    this.onCloseForm();\n  }\n  onUpdate = (id) =>{\n    var {tasks} = this.state;\n    var index = this.findIndex(id);   \n    var taskEditing = tasks[index];\n    this.setState({\n      taskEditing : taskEditing\n    });\n    this.onShowForm();\n    \n  }\n  onFilter = (filterName, filterStatus) =>{\n    filterStatus = parseInt(filterStatus,10);\n    this.setState({\n      filter : {\n        name: filterName.toLowerCase(),\n        status: filterStatus\n      }\n    });\n    \n  }\n\n  onSearch = (keyword) =>{\n    this.setState({\n      keyword : keyword\n    });\n    \n  }\n\n  onSort = (sortBy,sortValue) =>{\n  this.setState({\n      sortBy : sortBy,\n      sortValue: sortValue\n  });    \n  console.log(this.state);\n  \n  }\n\n  render() {\n    var {\n      tasks,\n      isDisplayForm,\n      taskEditing, \n      filter,\n      keyword,\n      sortBy,\n      sortValue\n    } = this.state; // var tasks = this.state.tasks // ES6\n    if(filter){\n      if(filter.name){\n        tasks = tasks.filter((task) =>{\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n      tasks = tasks.filter((task) =>{\n        if(filter.status === -1){\n          return task;\n        }else{\n          return task.status === (filter.status === 1 ? true : false)\n        }\n      });\n    }\n\n    if(keyword){\n      tasks = tasks.filter((task) =>{\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n    if(sortBy ==='name'){\n      tasks.sort((a,b) =>{\n        if(a.name > b.name) return sortValue;\n        else if(a.name < b.name) return -sortValue;\n        else return 0;\n      });\n    }else{\n      tasks.sort((a,b) =>{\n        if(a.status > b.status) return -sortValue;\n        else if(a.status < b.status) return sortValue;\n        else return 0;\n      });\n\n    }\n    var elmTaskForm = isDisplayForm ? <TaskForm \n    onCloseForm = {this.onCloseForm}\n    onSubmit = {this.onSubmit}\n    task = {taskEditing}\n    /> : ''\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản Lý Công Việc</h1>\n          <hr />\n        </div>\n        <div className=\"row\">\n          <div className={isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n            {elmTaskForm}\n          </div>\n          <div className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' :'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n            <button \n            type=\"button\" \n            className=\"btn btn-primary\"\n            onClick = {this.onToggleForm}\n            >\n              <span className=\"fa fa-plus mr-5\" />Thêm Công Việc\n            </button>\n\n            <Control \n            onSearch = {this.onSearch}\n            onSort = {this.onSort}\n            sortBy = {sortBy}\n            sortValue = {sortValue}\n            ></Control>\n            <TaskList \n            tasks = {tasks} \n            onUpdateStatus = {this.onUpdateStatus} \n            onDelete = {this.onDelete} \n            onUpdate = {this.onUpdate} \n            onFilter = {this.onFilter}/>\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}